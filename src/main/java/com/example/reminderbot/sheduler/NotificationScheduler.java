package com.example.reminderbot.sheduler;

import com.example.reminderbot.model.NotificationTask;
import com.example.reminderbot.repository.NotificationTaskRepository;
import com.example.reminderbot.service.TelegramBot;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import java.time.LocalDateTime;
import java.util.List;

@Component

public class NotificationScheduler {

    private static final Logger log = LoggerFactory.getLogger(TelegramBot.class);
    @Autowired
    private NotificationTaskRepository taskRepository;

    @Autowired
    private TelegramBot telegramBot;

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É (–≤ 0-—é —Å–µ–∫—É–Ω–¥—É)
    @Scheduled(cron = "0 * * * * *")
    public void sendNotifications() {
        LocalDateTime now = LocalDateTime.now();
        log.info("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ {}", now);

        List<NotificationTask> tasksToSend = taskRepository.findAllByNotificationDateTimeLessThanEqual(now);

        if (!tasksToSend.isEmpty()) {
            log.info("–ù–∞–π–¥–µ–Ω–æ {} –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏", tasksToSend.size());
        }

        for (NotificationTask task : tasksToSend) {
            telegramBot.sendMessage(task.getChatId(), "üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: " + task.getMessage());
            taskRepository.delete(task); // –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            log.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ —É–¥–∞–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {}", task);
        }
    }
}